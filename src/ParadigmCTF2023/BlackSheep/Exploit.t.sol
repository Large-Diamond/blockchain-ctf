// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.20;

import {Test, console2} from "forge-std/Test.sol";
import {HuffDeployer} from "foundry-huff/HuffDeployer.sol";
import {Challenge} from "./challenge/Challenge.sol";
import {ISimpleBank} from "./challenge/ISimpleBank.sol";
import {Exploit} from "./Exploit.sol";

contract ExploitTest is Test {
    address playerAddr = makeAddr("player");
    Challenge challenge;

    function setUp() public {
        vm.deal(playerAddr, 10 ether);
        ISimpleBank bank = ISimpleBank(HuffDeployer.deploy("ParadigmCTF2023/BlackSheep/challenge/SimpleBank"));
        payable(address(bank)).transfer(10 ether);
        challenge = new Challenge(ISimpleBank(address(bank)));
    }

    function test() public {
        vm.startPrank(playerAddr, playerAddr);

        new Exploit().exploit{value: 1}(address(challenge));

        assertTrue(challenge.isSolved());
        vm.stopPrank();
    }

    function testGetSignature() public pure {
        vm.sign(1, 0);
    }
}
