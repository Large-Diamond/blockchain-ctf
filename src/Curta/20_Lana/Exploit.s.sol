// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.13;

import {Script, console2} from "forge-std/Script.sol";
import {ICurta} from "../general/ICurta.sol";
import {Lana} from "./challenge/Challenge.sol";

// forge script src/Curta/20/Exploit.s.sol:ExploitScript --private-key $PRIVATE_KEY -vvvvv
// forge script src/Curta/20/Exploit.s.sol:ExploitScript --private-key $PRIVATE_KEY -vvvvv --broadcast

contract ExploitScript is Script {
    function run() public {
        vm.startBroadcast();

        address curtaAddr = 0x0000000006bC8D9e5e9d436217B88De704a9F307;
        address challengeAddr = 0xaffb3F98c2BABe229aE8586E1c2c1B4af6BB26F5;
        vm.deal(msg.sender, 1 ether);
        uint32 puzzleId = 20;

        ICurta curta = ICurta(curtaAddr);
        Lana puzzle = Lana(challengeAddr);

        bytes memory val =
            hex"4444434343424343434342424142414269414141414141414141414141414141414141414141414141414141414141414141414141414141414143434343434343434343434343434343434343434343434343434343434343434343434343437E";
        puzzle.solve(val, msg.sender);
        curta.solve(puzzleId, uint256(keccak256(val)));

        vm.stopBroadcast();
    }
}
