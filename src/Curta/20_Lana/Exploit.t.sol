// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.13;

import {Test, console2} from "forge-std/Test.sol";
import {Curta} from "../general/CurtaLocal.sol";
import {Lana} from "./challenge/Challenge.sol";
import {Strings} from "@openzeppelin/contracts/utils/Strings.sol";
import {ICurta} from "../general/ICurta.sol";

contract ExploitTest is Test {
    address playerAddr = 0x1317B995c20000C085Af006Ba2f311c107cAc7aD;
    Curta curta;
    Lana puzzle;
    uint32 puzzleId = 20;

    function setUp() public {
        curta = new Curta();
        curta.setPuzzleId(puzzleId - 1);
        puzzle = new Lana();
        curta.addPuzzle(puzzle, 0);
        vm.deal(playerAddr, 1 ether);
    }

    function test() public {
        vm.startPrank(playerAddr, playerAddr);

        bytes memory val =
            hex"4444434343424343434342424142414269414141414141414141414141414141414141414141414141414141414141414141414141414141414143434343434343434343434343434343434343434343434343434343434343434343434343437E";
        puzzle.solve(val, playerAddr);
        curta.solve(puzzleId, uint256(keccak256(val)));

        vm.stopPrank();
    }
}
