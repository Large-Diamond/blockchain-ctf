// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "./EthernautDaoToken.sol";
import "./EthernautDaoTokenExploit.sol";

contract EthernautDaoTokenExploitTest is Test {
    address playerAddress = address(10);
    address instanceAddress = 0xF3Cfa05F1eD0F5eB7A8080f1109Ad7E424902121;
    uint256 ownerPrivateKey =
        0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80;
    address ownerAddress = vm.addr(ownerPrivateKey);

    function test() public {
        vm.createSelectFork(vm.envString("RPC_GOERLI"), 7322870);
        EthernautDaoToken edt = EthernautDaoToken(instanceAddress);

        vm.startPrank(playerAddress, playerAddress);
        playerScript(instanceAddress, ownerPrivateKey, playerAddress, vm);
        vm.stopPrank();

        assertTrue(edt.balanceOf(ownerAddress) == 0);
        assertTrue(edt.balanceOf(playerAddress) > 0);
    }
}
