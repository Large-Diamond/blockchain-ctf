// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "./VendingMachine.sol";
import "./VendingMachineExploit.sol";

contract VendingMachineExploitTest is Test {
    address playerAddress = address(10);
    address instanceAddress = 0x00f4b86F1aa30a7434774f6Bc3CEe6435aE78174;

    function setUp() public {
        string memory RPC_GOERLI = vm.envString("RPC_GOERLI");
        vm.createSelectFork(RPC_GOERLI, 7235686);
        vm.deal(playerAddress, 0.1 ether);
    }

    function test() public {
        VendingMachine instance = VendingMachine(instanceAddress);
        vm.prank(instance.owner(), instance.owner());
        emit log_uint(instance.getContractBalance());

        vm.startPrank(playerAddress, playerAddress);
        playerScript(instanceAddress);
        vm.stopPrank();

        vm.prank(instance.owner(), instance.owner());
        emit log_uint(instance.getContractBalance());
        vm.prank(instance.owner(), instance.owner());
        assertTrue(!instance.hasNotBeenHacked());
    }
}
