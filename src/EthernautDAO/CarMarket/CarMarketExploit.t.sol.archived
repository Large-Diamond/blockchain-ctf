// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "./CarToken.sol";
import "./CarMarket.sol";
import "./CarFactory.sol";
import "./CarMarketExploit.sol";

contract CarMarketExploitTest is Test {
    address playerAddress = makeAddr("player");
    address tokenAddress = 0x66408824A99FF61ae2e032E3c7a461DED1a6718E;
    address marketAddress = 0x07AbFccEd19Aeb5148C284Cd39a9ff2Ac835960A;
    address factoryAddress = 0x012f0c715725683A5405B596f4F55D4AD3046854;

    function setUp() public {
        string memory RPC_GOERLI = vm.envString("RPC_GOERLI");
        vm.createSelectFork(RPC_GOERLI, 7247740);
    }

    function test() public {
        vm.startPrank(playerAddress, playerAddress);
        address exploitAddress = playerScript(marketAddress);
        vm.stopPrank();

        assertTrue(CarMarket(marketAddress).getCarCount(exploitAddress) >= 2);
    }
}
