// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "./Wallet.sol";
import "./WalletLibrary.sol";
import "./WalletLibraryExploit.sol";

contract WalletLibraryExploitTest is Test {
    address playerAddress = makeAddr("player");
    address walletAddress = 0x19c80e4Ec00fAAA6Ca3B41B17B75f7b0F4D64CB7;

    function setUp() public {
        string memory RPC_GOERLI = vm.envString("RPC_GOERLI");
        vm.createSelectFork(RPC_GOERLI, 7197929);
    }

    function test() public {
        WalletLibrary wallet = WalletLibrary(payable(walletAddress));
        uint256 txIndex = wallet.getTransactionCount();

        vm.startPrank(playerAddress, playerAddress);
        playerScript(walletAddress);
        vm.stopPrank();

        (,,, bool executed,) = wallet.getTransaction(txIndex);
        assertTrue(executed);
    }
}
