import rlp
from Crypto.Hash import keccak
from ecdsa import ecdsa


def same_nonce_attack(r: list[int], s: list[int], z: list[int]) -> ecdsa.Private_key:
    g = ecdsa.generator_secp256k1
    n = g.order()

    k = (z[0] - z[1]) * pow(s[0] - s[1], -1, n) % n
    d = (s[0] * k - z[0]) * pow(r[0], -1, n) % n
    d_ = (s[1] * k - z[1]) * pow(r[1], -1, n) % n
    assert d == d_

    pub = ecdsa.Public_key(g, g * d)
    priv = ecdsa.Private_key(pub, d)
    return priv

tx1 = {
    "nonce": 0,
    "gas_price": 1000000000,
    "gas_limit": 21000,
    "to": 0x92b28647Ae1F3264661f72fb2eB9625A89D88A31,
    "value": 1230000000000000000,
    "data": "", 
    "v": 0x29, 
    "r": 0x69a726edfb4b802cbf267d5fd1dabcea39d3d7b4bf62b9eeaeba387606167166, 
    "s": 0x7724cedeb923f374bef4e05c97426a918123cc4fec7b07903839f12517e1b3c8
}

tx2 = {
    "nonce": 1,
    "gas_price": 1000000000,
    "gas_limit": 21000,
    "to": 0x92b28647Ae1F3264661f72fb2eB9625A89D88A31,
    "value": 1811266580600000000,
    "data": "",
    "v": 0x29,
    "r": 0x69a726edfb4b802cbf267d5fd1dabcea39d3d7b4bf62b9eeaeba387606167166,
    "s": 0x2bbd9c2a6285c2b43e728b17bda36a81653dd5f4612a2e0aefdb48043c5108de
}

chain_id = 3

def data(tx):
    return rlp.encode([tx["nonce"], tx["gas_price"], tx["gas_limit"], tx["to"], tx["value"], tx["data"], chain_id, 0, 0])

hash1 = keccak.new(digest_bits=256, data=data(tx1)).hexdigest()
hash2 = keccak.new(digest_bits=256, data=data(tx2)).hexdigest()

z = [int(hash1, 16), int(hash2, 16)]
r = [tx1["r"], tx2["r"]]
s = [tx1["s"], tx2["s"]]

priv = same_nonce_attack(r, s, z)
print(hex(priv.secret_multiplier))

